#!/usr/bin/perl
# Copyright 2015 Alex Woroschilow (alex.woroschilow@gmail.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/src/lib";
use Config::Simple;
use ZBH::SGE;

use lib "/home/other/wurst/salamiServer/v02";
use Salamisrvini;
use lib $LIB_LIB;     #initialize in local Salamisrvini.pm;
use lib $LIB_ARCH;    #initialize in local Salamisrvini.pm;
use vars qw ( $INPUT_CLST_LIST $OUTPUT_BIN_DIR $PDB_TOP_DIR $OUTPUT_LIB_LIST);


sub main ($ $ $ $ $) {

	my $config  = shift;
	my $logger  = shift;
	my $server  = shift;
	my $planner = shift;
	my $worker  = shift;

	my $cfg = new Config::Simple($config);


	$cfg->param( "planner.cluster",     "$FindBin::Bin/var/clusters90.txt" );
	$cfg->param( "planner.source",      $PDB_TOP_DIR );
	$cfg->param( "planner.temp",        "$FindBin::Bin/tmp" );
	$cfg->param( "planner.output_bin",  "$FindBin::Bin/var/bin" );
	$cfg->param( "planner.output_vec1", "$FindBin::Bin/var/vec1" );
	$cfg->param( "planner.output_vec2", "$FindBin::Bin/var/vec2" );
	$cfg->param( "planner.class_vec1",  $CLASSFILE );
	$cfg->param( "planner.class_vec2",  $CA_CLASSFILE );
	$cfg->param( "planner.output_list", "$FindBin::Bin/var/pdb_all.list" ); #$OUTPUT_LIB_LIST
	$cfg->param( "planner.logfile",     "$FindBin::Bin/log/planner.log" );
	$cfg->param( "worker.logfile",      "$FindBin::Bin/log/worker.log" );
	$cfg->param( "server.logfile",      "$FindBin::Bin/log/server.log" );

	$cfg->write($config);

	my $logfile_planner = $cfg->param( "planner.logfile");
	my $logfile_worker = $cfg->param( "worker.logfile");
	my $logfile_server = $cfg->param( "server.logfile");

	return 0 if ( 
		ZBH::SGE::is_background_process_sge($server)
		&& ZBH::SGE::is_background_process_sge($planner)
		&& ZBH::SGE::is_background_process_sge($worker)
	);

	unlink($logfile_server);
	unlink($logfile_worker);
	unlink($logfile_planner);
	
	system("qsub -S /bin/bash -wd $FindBin::Bin $server $config $logger");
	# server should up for all workers and planners
	# so we have to wait some time
	while ( not ZBH::SGE::is_background_process_started_sge($server) ) {
		sleep(1);
	}
	system("qsub -S /bin/bash -wd $FindBin::Bin $worker $config $logger");
	system("qsub -S /bin/bash -wd $FindBin::Bin $planner $config $logger");

	return 0;
}

exit(
	main(
		"$FindBin::Bin/etc/vector.conf", 
		"$FindBin::Bin/etc/logger.conf",
		"$FindBin::Bin/bin/server.sh",   
		"$FindBin::Bin/bin/planner.sh",
		"$FindBin::Bin/bin/worker.sh"
	)
);
